version: '3.1'
services:
  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_wakacop}"
    image: localstack/localstack
    ports:
      - "127.0.0.1:53:53"                # only required for Pro
      - "127.0.0.1:53:53/udp"            # only required for Pro
      - "127.0.0.1:443:443"              # only required for Pro
      - "127.0.0.1:4510-4530:4510-4530"
      - "127.0.0.1:4566:4566"
      - "127.0.0.1:4571:4571"
    environment:
      - AWS_DEFAULT_REGION=sa-east-1
      - AWS_ACCESS_KEY_ID=fakeAccessKeyId
      - AWS_SECRET_ACCESS_KEY=fakeSecretAccessKey
      - DEFAULT_REGION=sa-east-1
      - http_proxy=
      - https_proxy=
      - SERVICES=${SERVICES-}
      - DEBUG=${DEBUG-}
      - DATA_DIR=${DATA_DIR-}
      - LAMBDA_EXECUTOR=${LAMBDA_EXECUTOR-}
      - LOCALSTACK_API_KEY=${LOCALSTACK_API_KEY-}  # only required for Pro
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp/}localstack
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/tmp/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

    volumes:
      - ./database:/docker_entrypoint-initdb.d/
      - ./database:/data:/var/lib/postgresql/data
    networks:
      - app.networks

networks:
  app.networks:
    driver: bridge

volumes:
  postgres.data: